

Lecture 35 :-

import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager

service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service)

driver.implicitly_wait(5)
driver.get("https://alnafi.com/courses/python")
driver.maximize_window()
time.sleep(5)

courses=[]
fees=[]

driver.execute_script("window.open('https://alnafi.com/courses/sysops','new window')")
wins = driver.window_handles
time.sleep(5)

#This is python course details
driver.switch_to.window(wins[0])
course_name = driver.find_element(By.XPATH,'//*[@id="__nuxt"]/div/div[4]/div[1]/section/div/section/aside[1]/h1').text
fees_usd = driver.find_element(By.XPATH,'//*[@id="__nuxt"]/div/div[4]/div[1]/section/div/section/aside[2]/section/div[2]/div[6]/span').text
courses.append(course_name)
fees.append(fees_usd)


#This is sysops course details
driver.switch_to.window(wins[1])        #Sysops
time.sleep(8)
course_name = driver.find_element(By.XPATH,'//*[@id="__nuxt"]/div/div[4]/div[1]/section/div/section/aside[1]/h1').text
fees_usd = driver.find_element(By.XPATH,'//*[@id="__nuxt"]/div/div[4]/div[1]/section/div/section/aside[2]/section/div[2]/div[6]/span').text
courses.append(course_name)
fees.append(fees_usd)
print(courses)
print(fees)


time.sleep(5)
driver.quit()



TASK 9:-


import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager

service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service)

driver.implicitly_wait(5)
driver.get("https://alnafi.com/courses/python")
driver.maximize_window()
time.sleep(5)

courses=[]
fees=[]

driver.execute_script("window.open('https://alnafi.com/courses/sysops','new window')")
wins = driver.window_handles
time.sleep(5)

#This is python course details
driver.switch_to.window(wins[0])
course_name = driver.find_element(By.XPATH,'//*[@id="__nuxt"]/div/div[4]/div[1]/section/div/section/aside[1]/h1').text
fees_usd = driver.find_element(By.XPATH,'//*[@id="__nuxt"]/div/div[4]/div[1]/section/div/section/aside[2]/section/div[2]/div[6]/span').text
courses.append(course_name)
fees.append(fees_usd)


#This is sysops course details
driver.switch_to.window(wins[1])        #Sysops
time.sleep(8)
course_name = driver.find_element(By.XPATH,'//*[@id="__nuxt"]/div/div[4]/div[1]/section/div/section/aside[1]/h1').text
fees_usd = driver.find_element(By.XPATH,'//*[@id="__nuxt"]/div/div[4]/div[1]/section/div/section/aside[2]/section/div[2]/div[6]/span').text
courses.append(course_name)
fees.append(fees_usd)
print(courses)
print(fees)

file = open('myfile_abd.csv','w')
writer = csv.writer(file)
writer.writerow(courses)
writer.writerow(fees)
file.close()


time.sleep(5)
driver.quit()



#################

You need to create one another file for testing csv data instead of run everything in selenium 

test.py


import csv

courses = ['Python', 'SysOps (System Operations)']
fees = ['35 USD', '325 USD']
file = open('myfile_abd.csv','w')
writer = csv.writer(file)
writer.writerow(courses)
writer.writerow(fees)
file.close()



####
import csv

courses = ['Python', 'SysOps (System Operations)']
fees = ['35 USD', '325 USD']
data = list(zip(courses,fees))
print(data)
file = open('myfile_abd.csv','w')
writer = csv.writer(file)
writer.writerow(data)
file.close()





#########################################################

TASK 9 final CODE :-    ((I have done this one !!!!!!!!)

import time
import csv
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager

service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service)

driver.implicitly_wait(5)
driver.get("https://www.codecademy.com/learn/paths/bi-data-analyst")
driver.maximize_window()
time.sleep(5)

courses=[]
fees=[]

driver.implicitly_wait(10)
driver.execute_script("window.open('https://codebasics.io/bootcamps/data-analytics-bootcamp-with-practical-job-assistance','new window')")
wins = driver.window_handles
time.sleep(10)

#This is python course details
driver.switch_to.window(wins[0])
course_name = driver.find_element(By.XPATH,'//*[@id="__next"]/div/div[2]/main/div[2]/div[2]/div/div/div/div[1]/div/div[1]/h1').text
fees_usd = driver.find_element(By.XPATH,'//*[@id="__next"]/div/div[2]/main/div[2]/div[3]/div/div/ul/li[3]/div/div[2]/span').text
courses.append(course_name)
fees.append(fees_usd)


#This is sysops course details
driver.switch_to.window(wins[1])        #Sysops
time.sleep(8)
course_name = driver.find_element(By.XPATH,'/html/body/div[1]/main/section[1]/div/div/div[1]/div/h1').text
fees_usd = driver.find_element(By.XPATH,'/html/body/div[1]/main/section[1]/div/div/div[2]/div[1]/div/div[1]/div').text
courses.append(course_name)
fees.append(fees_usd)
print(courses)
print(fees)

data = list(zip(courses,fees))
print(data)
file = open('myfile.csv','w',newline='')
writer = csv.writer(file)
writer.writerows(data)
file.close()

time.sleep(5)
driver.quit()




####
TASK 10 FINAL CODE :-

import csv
from selenium import webdriver
from selenium.webdriver.common.by import By
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email.mime.image import MIMEImage
from email import  encoders
from datetime import *
import time as t

from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager

service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service)


driver.implicitly_wait(5)
driver.get("https://www.codecademy.com/learn/paths/bi-data-analyst")
driver.maximize_window()
t.sleep(5)

courses=[]
fees=[]

driver.execute_script("window.open('https://codebasics.io/bootcamps/data-analytics-bootcamp-with-practical-job-assistance','new window')")
wins = driver.window_handles
t.sleep(5)

#This is python course details
driver.switch_to.window(wins[0])
course_name = driver.find_element(By.XPATH,'//*[@id="__next"]/div/div[2]/main/div[2]/div[2]/div/div/div/div[1]/div/div[1]/h1').text
fees_usd = driver.find_element(By.XPATH,'//*[@id="__next"]/div/div[2]/main/div[2]/div[3]/div/div/ul/li[3]/div/div[2]/span').text
courses.append(course_name)
fees.append(fees_usd)


#This is sysops course details
driver.switch_to.window(wins[1])        #Sysops
t.sleep(8)
course_name = driver.find_element(By.XPATH,'/html/body/div[1]/main/section[1]/div/div/div[1]/div/h1').text
fees_usd = driver.find_element(By.XPATH,'/html/body/div[1]/main/section[1]/div/div/div[2]/div[1]/div/div[1]/div').text
courses.append(course_name)
fees.append(fees_usd)
print(courses)
print(fees)

data = list(zip(courses,fees))
print(data)
file = open('myfile_abd.csv','w',newline='')
writer = csv.writer(file)
writer.writerows(data)
file.close()

t.sleep(5)
driver.quit()
day=date.today()
time1=datetime.now()

my_custom=day.strftime("%B %d %Y")
current_time=time1.strftime("%I:%M:%S %p")

filename=r"C:\Users\PMLS\PycharmProjects\pythonProject1\myfile.csv"
msg=MIMEMultipart()

my_mail="ahmad.hds393@gmail.com"
password="gezc rpxo yalw wzqp"
msg['Subject']= f"Course fees details :  {my_custom} {current_time}"
msg['From']= my_mail
msg['To'] = my_mail
msg['Cc'] = 'ahmad.hds393@gmailcom@gmail.com'


body = """
<html>
<p> Hi Team,<br> 
We have collected Alanfi's course fees details from the official website and stored the data in a CSV file. 
So kindly find and attach.  
<br><br><br>Abdeali Dodiya</p> 
</html>
"""

msg.attach(MIMEText(body,'html'))




#ATTACHMENT section
attachment=open(filename,'rb')
part = MIMEBase('application','octet-stream')
part.set_payload((attachment).read())
encoders.encode_base64(part)
part.add_header('Content-Disposition',"attachment; filename=%s" % filename)
msg.attach(part)

connection=smtplib.SMTP('smtp.gmail.com')
connection.starttls()       #TLS transport layer security


connection.login(user=my_mail,password=password)
connection.send_message(msg)
connection.close()














