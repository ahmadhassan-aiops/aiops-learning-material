vagrant@vagrant-ubuntu-trusty-64:~/mydir$ tree
.
├── automated_setup
├── script.sh
├── setup.sh
├── test.txt
└── Vagrantfile

1 directory, 4 files

-----------------------------------

vagrant@vagrant-ubuntu-trusty-64:~/mydir$ cat setup.sh
#!/bin/bash

echo "!!!!!!!!!!!!!!!!!!!!Updating system!!!!!!!!!!!!!!!!!!!!"
sudo apt-get update -y

echo "####################Installing apache2####################"
sudo apt-get install apache2 -y

echo "Removing default Apache page..."
sudo rm -rf /var/www/html/index.html

echo "Checking Apache status..."
sudo service apache2 status

echo "Restarting Apache service..."
sudo service apache2 restart

echo "Apache installation and configuration complete."

echo "!!!!!!!!!!!!!!!!!!!!Installing PHP!!!!!!!!!!!!!!!!!!!!"
sudo apt-get install php libapache2-mod-php php-mysql -y

echo "Checking Apache status..."
sudo service apache2 status

echo "Restarting Apache service to enable PHP module..."
sudo service apache2 restart

echo "PHP installation complete."

----------------------------------------------

cat vagrantfile


Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/trusty64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false
  config.vm.provision "shell",
    path: "W:\\Alnafi\\Devops\\Vagarant\\vagrant os installation\\setup.sh"

  config.vm.provision "shell",
    inline: "sudo service apache2 restart"


  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "192.168.0.105"


  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  config.vm.network "public_network", ip: "192.168.0.104", bridge:"Intel(R) Wi-Fi 6 AX201 160MHz"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "W:\\Alnafi\\Devops\\Vagarant\\vagrant os installation", "/var/www/html"

  config.vm.provision "shell",
    inline: "sudo service apache2 restart"

  # View the documentation for the provider you are using for more
  # information on available options.
  config.vm.provision "shell",
    path: "W:\\Alnafi\\Devops\\Vagarant\\vagrant os installation\\setup.sh"

  config.vm.provision "shell",
    inline: "sudo service apache2 restart"


--------------------------------------------







