Lecture 26 : Docker notes



Lecture 25: --> Gitlab --> Dockerfile IDE --> Via automation created CICD workflow --> Automatically Docker file build and push into Gitlab --> Via manually --> Docker pull



Gitlab --> WebIDE --> Create docker file --> Push to AWS ECR  via automation using CICD pipline --> AWS ECR

Create Public directory and inside the directory you can create index.html file such as
public/index.html

<html>
<head>
<h1> Its works... Webpage from gitlab to AWS ECR </h1>
    </head>
    </html>



Dockerfile
FROM nginx:alpine
COPY ./public /usr/share/nginx/html



create file as gitlab-ci.yml

variables:
  DOCKER_REGISTRY: 106412461727.dkr.ecr.us-east-1.amazonaws.com
  AWS_DEFAULT_REGION: us-east-1
  APP_NAME: mynode
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

publish:
  stage: build
  image:
    name: docker:latest
  services:
    - docker:19-dind
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - python3 -m venv /tmp/venv  # Create virtual environment
    - source /tmp/venv/bin/activate  # Activate virtual environment
    - pip install --upgrade pip  # Upgrade pip in the virtual environment
    - pip install awscli  # Install awscli inside the virtual environment
    - aws --version  # Verify awscli installation
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $DOCKER_REGISTRY  # Authenticate Docker with ECR
    - docker info  # Check Docker info
    - docker --version  # Check Docker version
  script:
    - docker build -t $DOCKER_REGISTRY/$APP_NAME:$CI_PIPELINE_IID .  # Build Docker image
    - docker push $DOCKER_REGISTRY/$APP_NAME:$CI_PIPELINE_IID  # Push Docker image to ECR







Create IAM user with below policy :-
EC2InstanceProfileForImageBuilderECRContainerBuilds
AmazonEC2ContainerRegistryPowerUser
AmazonElasticContainerRegistryPublicPowerUser
AdministratorAccess


Permissions summary
The following policies will be attached to the user shown above.

Type
Name
Managed policy
AdministratorAccess
Managed policy
EC2InstanceProfileForImageBuilderECRContainerBuilds
Managed policy
AmazonEC2ContainerRegistryPowerUser
Managed policy
AmazonElasticContainerRegistryPublicPowerUser
Managed policy
IAMUserChangePassword


Go to Gitlab account and create variable
Your project --> Project click --> Setting --> CICD --> Variables --> Expand

AWS_ACCESS_KEY_ID = **************
AWS_SECRET_ACCESS_KEY = **********************
AWS_DEFAULT_REGION  = us-east-1

You need to define value as per your AWS token ID and Region

--> Then you need to go AWS ECR account and copy the location
ECR --> 483301552061.dkr.ecr.us-east-1.amazonaws.com/mynode

You need to change
DOCKER_REGISTRY:
AWS_DEFAULT_REGION
APP_NAME


Gitlab push image
Gitlab push to ECR

Before pull please check AWS cli and AWS login at your machine or not
export AWS_ACCESS_KEY_ID="***********"
export AWS_SECRET_ACCESS_KEY="Paste Here"

Please refer to your Push documents
aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 483301552061.dkr.ecr.us-east-1.amazonaws.com


docker pull 483301552061.dkr.ecr.us-east-1.amazonaws.com/mynode:2

Gitlab --> AWS ECR --> AWS ECR --> Local machine
Container -->
