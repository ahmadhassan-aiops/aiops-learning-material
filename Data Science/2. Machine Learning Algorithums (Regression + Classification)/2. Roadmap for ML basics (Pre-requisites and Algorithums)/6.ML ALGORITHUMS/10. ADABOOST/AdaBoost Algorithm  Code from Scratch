{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNQ1ZYoSqjJ8MjioejXX8H6"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"TPU"},"cells":[{"cell_type":"markdown","source":["# Boosting\n","**Here we have the same types of models but we trained them sequentially on data means when 1st model is trained it will notedown its mistake and pass on to the next model,and next model will provide its mistake to the next model while training and so on.Thus in the end we end up with the large ensemble learning model which has the highest accuracy!**"],"metadata":{"id":"2tSZqQKGhtOU"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from mlxtend.plotting import plot_decision_regions"],"metadata":{"id":"GgpMIlxK2TXS","executionInfo":{"status":"ok","timestamp":1692818689636,"user_tz":-300,"elapsed":2968,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame()"],"metadata":{"id":"AFllkrTL20JL","executionInfo":{"status":"ok","timestamp":1692818702077,"user_tz":-300,"elapsed":3,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df['X1'] = [1,2,3,4,5,6,6,7,9,9]\n","df['X2'] = [5,3,6,8,1,9,5,8,9,2]\n","df['label'] = [1,1,0,1,0,1,0,1,0,0]\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"epARo_Gf24LS","executionInfo":{"status":"ok","timestamp":1692818723647,"user_tz":-300,"elapsed":10,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"bccf5df1-2e34-41b0-e44a-0ee28cd4df52"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   X1  X2  label\n","0   1   5      1\n","1   2   3      1\n","2   3   6      0\n","3   4   8      1\n","4   5   1      0\n","5   6   9      1\n","6   6   5      0\n","7   7   8      1\n","8   9   9      0\n","9   9   2      0"],"text/html":["\n","  <div id=\"df-6553fdd1-a5b3-42f1-916f-23767ef1fc77\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6553fdd1-a5b3-42f1-916f-23767ef1fc77')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6553fdd1-a5b3-42f1-916f-23767ef1fc77 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6553fdd1-a5b3-42f1-916f-23767ef1fc77');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-836a2010-2522-493a-92b0-cd0951a8e3d9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-836a2010-2522-493a-92b0-cd0951a8e3d9')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-836a2010-2522-493a-92b0-cd0951a8e3d9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["import seaborn as sns\n","sns.scatterplot(x=df['X1'],y=df['X2'],hue=df['label'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"vHD8wSQv2_gh","executionInfo":{"status":"ok","timestamp":1692818769108,"user_tz":-300,"elapsed":2347,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"f9a8776f-b184-4ac0-f0e7-f36aa191689d"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='X1', ylabel='X2'>"]},"metadata":{},"execution_count":4},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# step#1 initial wegths are assigned\n","df['weights'] = 1/df.shape[0]\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"1CPuTUyv3LA0","executionInfo":{"status":"ok","timestamp":1692818928465,"user_tz":-300,"elapsed":419,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"ed600096-0e4e-4b97-dacb-fc3a438c17bb"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   X1  X2  label  weights\n","0   1   5      1      0.1\n","1   2   3      1      0.1\n","2   3   6      0      0.1\n","3   4   8      1      0.1\n","4   5   1      0      0.1\n","5   6   9      1      0.1\n","6   6   5      0      0.1\n","7   7   8      1      0.1\n","8   9   9      0      0.1\n","9   9   2      0      0.1"],"text/html":["\n","  <div id=\"df-c89c26eb-0734-4525-abd7-a3d9772adf9c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>label</th>\n","      <th>weights</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c89c26eb-0734-4525-abd7-a3d9772adf9c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c89c26eb-0734-4525-abd7-a3d9772adf9c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c89c26eb-0734-4525-abd7-a3d9772adf9c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fcfe4be4-23c1-497a-be27-1523de80e676\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fcfe4be4-23c1-497a-be27-1523de80e676')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fcfe4be4-23c1-497a-be27-1523de80e676 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","dt1 = DecisionTreeClassifier(max_depth=1)"],"metadata":{"id":"a-4R9t1G3Yji","executionInfo":{"status":"ok","timestamp":1692818934347,"user_tz":-300,"elapsed":630,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["X = df.iloc[:,0:2].values\n","y = df.iloc[:,2].values"],"metadata":{"id":"w9oNL1Ag3msT","executionInfo":{"status":"ok","timestamp":1692818936237,"user_tz":-300,"elapsed":3,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["# Step 2 - Train 1st model\n","dt1.fit(X,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"aXzT0qed3xlL","executionInfo":{"status":"ok","timestamp":1692818952049,"user_tz":-300,"elapsed":355,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"711b23d2-4af3-451a-fe6c-1884b832dce9"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier(max_depth=1)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(max_depth=1)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["from sklearn.tree import plot_tree\n","plot_tree(dt1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"CB8gv9jF31d5","executionInfo":{"status":"ok","timestamp":1692818965690,"user_tz":-300,"elapsed":613,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"e9495d62-7cf1-4575-e132-f3b3700deae3"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Text(0.5, 0.75, 'x[0] <= 2.5\\ngini = 0.5\\nsamples = 10\\nvalue = [5, 5]'),\n"," Text(0.25, 0.25, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.75, 0.25, 'gini = 0.469\\nsamples = 8\\nvalue = [5, 3]')]"]},"metadata":{},"execution_count":13},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plot_decision_regions(X, y, clf=dt1, legend=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"CebwXEVw34k7","executionInfo":{"status":"ok","timestamp":1692819073133,"user_tz":-300,"elapsed":879,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"5a43920e-596c-4c24-8f81-ba6fb8c2bf40"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df['y_pred'] = dt1.predict(X)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"WuraxEEc4VxA","executionInfo":{"status":"ok","timestamp":1692819267991,"user_tz":-300,"elapsed":18,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"6c035e40-185d-48c7-f6a2-639d053667ca"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   X1  X2  label  weights  y_pred\n","0   1   5      1      0.1       1\n","1   2   3      1      0.1       1\n","2   3   6      0      0.1       0\n","3   4   8      1      0.1       0\n","4   5   1      0      0.1       0\n","5   6   9      1      0.1       0\n","6   6   5      0      0.1       0\n","7   7   8      1      0.1       0\n","8   9   9      0      0.1       0\n","9   9   2      0      0.1       0"],"text/html":["\n","  <div id=\"df-8ab00669-86fe-4aae-a43c-359c3ac22d6c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>label</th>\n","      <th>weights</th>\n","      <th>y_pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ab00669-86fe-4aae-a43c-359c3ac22d6c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8ab00669-86fe-4aae-a43c-359c3ac22d6c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8ab00669-86fe-4aae-a43c-359c3ac22d6c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1838b74a-4520-4ddd-9d19-03f3b35707fa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1838b74a-4520-4ddd-9d19-03f3b35707fa')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1838b74a-4520-4ddd-9d19-03f3b35707fa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["def calculate_model_weight(error):\n","  return 0.5*np.log((1-error)/(error))"],"metadata":{"id":"0d1nkBg644h5","executionInfo":{"status":"ok","timestamp":1692819282299,"user_tz":-300,"elapsed":381,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# Step 3 - calculate model weight\n","alpha1 = calculate_model_weight(0.3)\n","alpha1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LnOteXKj5F74","executionInfo":{"status":"ok","timestamp":1692819294258,"user_tz":-300,"elapsed":396,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"733580fb-97b4-44f0-86ad-b41ee10a6b5b"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.42364893019360184"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# Step 4 - Update weights\n","def update_row_weights(row,alpha=0.423):\n","  if row['label'] == row['y_pred']:\n","    return row['weights'] * np.exp(-alpha)\n","  else:\n","    return row['weights'] * np.exp(alpha)"],"metadata":{"id":"jmf3HqO_5I4X","executionInfo":{"status":"ok","timestamp":1692819337114,"user_tz":-300,"elapsed":3,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["df['updated_weights'] = df.apply(update_row_weights,axis=1)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"a-ekbQE45TPd","executionInfo":{"status":"ok","timestamp":1692819350639,"user_tz":-300,"elapsed":9,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"70063a78-5c14-4746-8eec-2e1ac485e198"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   X1  X2  label  weights  y_pred  updated_weights\n","0   1   5      1      0.1       1         0.065508\n","1   2   3      1      0.1       1         0.065508\n","2   3   6      0      0.1       0         0.065508\n","3   4   8      1      0.1       0         0.152653\n","4   5   1      0      0.1       0         0.065508\n","5   6   9      1      0.1       0         0.152653\n","6   6   5      0      0.1       0         0.065508\n","7   7   8      1      0.1       0         0.152653\n","8   9   9      0      0.1       0         0.065508\n","9   9   2      0      0.1       0         0.065508"],"text/html":["\n","  <div id=\"df-7a2d3c06-5790-4054-bd9a-61e7e13ba82d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>label</th>\n","      <th>weights</th>\n","      <th>y_pred</th>\n","      <th>updated_weights</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.065508</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.065508</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.152653</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.152653</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.152653</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a2d3c06-5790-4054-bd9a-61e7e13ba82d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7a2d3c06-5790-4054-bd9a-61e7e13ba82d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7a2d3c06-5790-4054-bd9a-61e7e13ba82d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-269157ad-8b56-41e6-998e-3f1500b7afa6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-269157ad-8b56-41e6-998e-3f1500b7afa6')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-269157ad-8b56-41e6-998e-3f1500b7afa6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["df['updated_weights'].sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2-6Wv4LF5XrA","executionInfo":{"status":"ok","timestamp":1692819398523,"user_tz":-300,"elapsed":5,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"12bdf3d6-40cd-4c38-ac56-bc4b598290c2"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9165153319682015"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["df['nomalized_weights'] = df['updated_weights']/df['updated_weights'].sum()\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"Z2ENVrgy5iKs","executionInfo":{"status":"ok","timestamp":1692819412255,"user_tz":-300,"elapsed":7,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"61054692-efc0-42c0-d434-ccb7cd49b34b"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   X1  X2  label  weights  y_pred  updated_weights  nomalized_weights\n","0   1   5      1      0.1       1         0.065508           0.071475\n","1   2   3      1      0.1       1         0.065508           0.071475\n","2   3   6      0      0.1       0         0.065508           0.071475\n","3   4   8      1      0.1       0         0.152653           0.166559\n","4   5   1      0      0.1       0         0.065508           0.071475\n","5   6   9      1      0.1       0         0.152653           0.166559\n","6   6   5      0      0.1       0         0.065508           0.071475\n","7   7   8      1      0.1       0         0.152653           0.166559\n","8   9   9      0      0.1       0         0.065508           0.071475\n","9   9   2      0      0.1       0         0.065508           0.071475"],"text/html":["\n","  <div id=\"df-354b1229-429d-443f-a71e-22add9cc32e6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>label</th>\n","      <th>weights</th>\n","      <th>y_pred</th>\n","      <th>updated_weights</th>\n","      <th>nomalized_weights</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.065508</td>\n","      <td>0.071475</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.065508</td>\n","      <td>0.071475</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","      <td>0.071475</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.152653</td>\n","      <td>0.166559</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","      <td>0.071475</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.152653</td>\n","      <td>0.166559</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","      <td>0.071475</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.152653</td>\n","      <td>0.166559</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","      <td>0.071475</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","      <td>0.071475</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-354b1229-429d-443f-a71e-22add9cc32e6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-354b1229-429d-443f-a71e-22add9cc32e6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-354b1229-429d-443f-a71e-22add9cc32e6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7fcbe190-b851-4c4b-a8b1-6e3fab37da15\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7fcbe190-b851-4c4b-a8b1-6e3fab37da15')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7fcbe190-b851-4c4b-a8b1-6e3fab37da15 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["df['nomalized_weights'].sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6BVuV7Iu5raW","executionInfo":{"status":"ok","timestamp":1692819452238,"user_tz":-300,"elapsed":401,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"8a2638d9-86da-4b7f-b3fc-5871b06bd804"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["df['cumsum_upper'] = np.cumsum(df['nomalized_weights'])\n","df['cumsum_lower'] = df['cumsum_upper'] - df['nomalized_weights']\n","df[['X1','X2','label','weights','y_pred','updated_weights','cumsum_lower','cumsum_upper']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"zYTNj4Fj5vVf","executionInfo":{"status":"ok","timestamp":1692819494420,"user_tz":-300,"elapsed":383,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"f7c5f824-896b-4b56-e796-f028e0d085c7"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   X1  X2  label  weights  y_pred  updated_weights  cumsum_lower  cumsum_upper\n","0   1   5      1      0.1       1         0.065508      0.000000      0.071475\n","1   2   3      1      0.1       1         0.065508      0.071475      0.142950\n","2   3   6      0      0.1       0         0.065508      0.142950      0.214425\n","3   4   8      1      0.1       0         0.152653      0.214425      0.380983\n","4   5   1      0      0.1       0         0.065508      0.380983      0.452458\n","5   6   9      1      0.1       0         0.152653      0.452458      0.619017\n","6   6   5      0      0.1       0         0.065508      0.619017      0.690492\n","7   7   8      1      0.1       0         0.152653      0.690492      0.857050\n","8   9   9      0      0.1       0         0.065508      0.857050      0.928525\n","9   9   2      0      0.1       0         0.065508      0.928525      1.000000"],"text/html":["\n","  <div id=\"df-9370774e-c0e9-41ad-b390-9aa195673fd5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>label</th>\n","      <th>weights</th>\n","      <th>y_pred</th>\n","      <th>updated_weights</th>\n","      <th>cumsum_lower</th>\n","      <th>cumsum_upper</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.065508</td>\n","      <td>0.000000</td>\n","      <td>0.071475</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.065508</td>\n","      <td>0.071475</td>\n","      <td>0.142950</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","      <td>0.142950</td>\n","      <td>0.214425</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.152653</td>\n","      <td>0.214425</td>\n","      <td>0.380983</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","      <td>0.380983</td>\n","      <td>0.452458</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.152653</td>\n","      <td>0.452458</td>\n","      <td>0.619017</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","      <td>0.619017</td>\n","      <td>0.690492</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.152653</td>\n","      <td>0.690492</td>\n","      <td>0.857050</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","      <td>0.857050</td>\n","      <td>0.928525</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.065508</td>\n","      <td>0.928525</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9370774e-c0e9-41ad-b390-9aa195673fd5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9370774e-c0e9-41ad-b390-9aa195673fd5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9370774e-c0e9-41ad-b390-9aa195673fd5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-00dbf1e9-fdce-453f-8263-14ac7bbf970e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-00dbf1e9-fdce-453f-8263-14ac7bbf970e')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-00dbf1e9-fdce-453f-8263-14ac7bbf970e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["def create_new_dataset(df):\n","\n","  indices = []\n","\n","  for i in range(df.shape[0]):\n","    a = np.random.random()\n","    for index,row in df.iterrows():\n","      if row['cumsum_upper'] > a and a > row['cumsum_lower']:\n","        indices.append(index)\n","  return indices"],"metadata":{"id":"OV4WD93V56qO","executionInfo":{"status":"ok","timestamp":1692820335367,"user_tz":-300,"elapsed":370,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["index_values = create_new_dataset(df)\n","index_values"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J8d_tzfU9GvF","executionInfo":{"status":"ok","timestamp":1692820346745,"user_tz":-300,"elapsed":4,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"7903090f-198a-4d31-fddd-1c17d25372e8"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[5, 8, 1, 8, 2, 1, 0, 3, 2, 3]"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["second_df = df.iloc[index_values,[0,1,2,3]]\n","second_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"il5XnmbP9JyK","executionInfo":{"status":"ok","timestamp":1692820360073,"user_tz":-300,"elapsed":377,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"9bff2d13-6c8e-48c0-8fd8-d1b7242f66a6"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   X1  X2  label  weights\n","5   6   9      1      0.1\n","8   9   9      0      0.1\n","1   2   3      1      0.1\n","8   9   9      0      0.1\n","2   3   6      0      0.1\n","1   2   3      1      0.1\n","0   1   5      1      0.1\n","3   4   8      1      0.1\n","2   3   6      0      0.1\n","3   4   8      1      0.1"],"text/html":["\n","  <div id=\"df-1855e358-eedf-4698-86f9-f6b76dd11fc7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>label</th>\n","      <th>weights</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1855e358-eedf-4698-86f9-f6b76dd11fc7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1855e358-eedf-4698-86f9-f6b76dd11fc7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1855e358-eedf-4698-86f9-f6b76dd11fc7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c947b3f5-0325-46f5-be13-63a6e3a9934d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c947b3f5-0325-46f5-be13-63a6e3a9934d')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c947b3f5-0325-46f5-be13-63a6e3a9934d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","source":["\n","\n","---\n","\n","\n","---\n","\n","\n","\n","---\n","\n","\n","\n","\n","---\n","\n"],"metadata":{"id":"7wVevDZe9Rbb"}},{"cell_type":"code","source":["dt2 = DecisionTreeClassifier(max_depth=1)\n","\n","X = second_df.iloc[:,0:2].values\n","y = second_df.iloc[:,2].values\n","\n","dt2.fit(X,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"dn-G0Fb49O3f","executionInfo":{"status":"ok","timestamp":1692820404622,"user_tz":-300,"elapsed":373,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"45804c6d-bf84-48f4-9036-4b1bd528695f"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier(max_depth=1)"],"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(max_depth=1)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["plot_tree(dt2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"D3bVoLMx9YAs","executionInfo":{"status":"ok","timestamp":1692820415133,"user_tz":-300,"elapsed":937,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"278058ff-35f9-4db1-b8d3-7819866dd358"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Text(0.5, 0.75, 'x[0] <= 7.5\\ngini = 0.48\\nsamples = 10\\nvalue = [4, 6]'),\n"," Text(0.25, 0.25, 'gini = 0.375\\nsamples = 8\\nvalue = [2, 6]'),\n"," Text(0.75, 0.25, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]')]"]},"metadata":{},"execution_count":31},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plot_decision_regions(X, y, clf=dt2, legend=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"M5R6ypoT9bY3","executionInfo":{"status":"ok","timestamp":1692820435187,"user_tz":-300,"elapsed":1180,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"3f7a61c7-b9a3-41e7-b04c-108d717cf19f"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":32},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["second_df['y_pred'] = dt2.predict(X)\n","second_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"veFx8mhU9fKg","executionInfo":{"status":"ok","timestamp":1692820449870,"user_tz":-300,"elapsed":7,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"e3f8ce87-61df-4be2-82a1-cc841b9d37ed"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   X1  X2  label  weights  y_pred\n","5   6   9      1      0.1       1\n","8   9   9      0      0.1       0\n","1   2   3      1      0.1       1\n","8   9   9      0      0.1       0\n","2   3   6      0      0.1       1\n","1   2   3      1      0.1       1\n","0   1   5      1      0.1       1\n","3   4   8      1      0.1       1\n","2   3   6      0      0.1       1\n","3   4   8      1      0.1       1"],"text/html":["\n","  <div id=\"df-e4ab8936-e708-40ff-a5d9-cb85ccab574b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>label</th>\n","      <th>weights</th>\n","      <th>y_pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4ab8936-e708-40ff-a5d9-cb85ccab574b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e4ab8936-e708-40ff-a5d9-cb85ccab574b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e4ab8936-e708-40ff-a5d9-cb85ccab574b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a81ae270-921d-4fe8-a5bc-82a66737311d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a81ae270-921d-4fe8-a5bc-82a66737311d')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a81ae270-921d-4fe8-a5bc-82a66737311d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["alpha2 = calculate_model_weight(0.1)\n","alpha2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KojUtsQU9jBu","executionInfo":{"status":"ok","timestamp":1692820469790,"user_tz":-300,"elapsed":6,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"82e30ba2-aa08-4678-fe74-faabc89eaf06"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0986122886681098"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["\n","# Step 4 - Update weights\n","def update_row_weights(row,alpha=1.09):\n","  if row['label'] == row['y_pred']:\n","    return row['weights'] * np.exp(-alpha)\n","  else:\n","    return row['weights'] * np.exp(alpha)"],"metadata":{"id":"02nDone89n2q","executionInfo":{"status":"ok","timestamp":1692820481663,"user_tz":-300,"elapsed":4,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["second_df['updated_weights'] = second_df.apply(update_row_weights,axis=1)\n","second_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"7F1N_D629qun","executionInfo":{"status":"ok","timestamp":1692820493988,"user_tz":-300,"elapsed":371,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"db0ad1cb-eea4-4bba-a6f4-4eca40f56fa0"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   X1  X2  label  weights  y_pred  updated_weights\n","5   6   9      1      0.1       1         0.033622\n","8   9   9      0      0.1       0         0.033622\n","1   2   3      1      0.1       1         0.033622\n","8   9   9      0      0.1       0         0.033622\n","2   3   6      0      0.1       1         0.297427\n","1   2   3      1      0.1       1         0.033622\n","0   1   5      1      0.1       1         0.033622\n","3   4   8      1      0.1       1         0.033622\n","2   3   6      0      0.1       1         0.297427\n","3   4   8      1      0.1       1         0.033622"],"text/html":["\n","  <div id=\"df-3d098548-f15b-4bf5-9c28-ca989a0d518b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>label</th>\n","      <th>weights</th>\n","      <th>y_pred</th>\n","      <th>updated_weights</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.033622</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.033622</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.033622</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.033622</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.297427</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.033622</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.033622</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.033622</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.297427</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.033622</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d098548-f15b-4bf5-9c28-ca989a0d518b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3d098548-f15b-4bf5-9c28-ca989a0d518b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3d098548-f15b-4bf5-9c28-ca989a0d518b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5e90e784-ab30-4e2e-8f97-6034929f4e7c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5e90e784-ab30-4e2e-8f97-6034929f4e7c')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5e90e784-ab30-4e2e-8f97-6034929f4e7c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["second_df['nomalized_weights'] = second_df['updated_weights']/second_df['updated_weights'].sum()\n","second_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"XdzEJ-oI9trH","executionInfo":{"status":"ok","timestamp":1692820508037,"user_tz":-300,"elapsed":9,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"1a52acae-6184-458a-f192-a824d8350be4"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   X1  X2  label  weights  y_pred  updated_weights  nomalized_weights\n","5   6   9      1      0.1       1         0.033622           0.038922\n","8   9   9      0      0.1       0         0.033622           0.038922\n","1   2   3      1      0.1       1         0.033622           0.038922\n","8   9   9      0      0.1       0         0.033622           0.038922\n","2   3   6      0      0.1       1         0.297427           0.344313\n","1   2   3      1      0.1       1         0.033622           0.038922\n","0   1   5      1      0.1       1         0.033622           0.038922\n","3   4   8      1      0.1       1         0.033622           0.038922\n","2   3   6      0      0.1       1         0.297427           0.344313\n","3   4   8      1      0.1       1         0.033622           0.038922"],"text/html":["\n","  <div id=\"df-d65a4f56-a142-4a54-b4ce-9cc97de08171\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>label</th>\n","      <th>weights</th>\n","      <th>y_pred</th>\n","      <th>updated_weights</th>\n","      <th>nomalized_weights</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.033622</td>\n","      <td>0.038922</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.033622</td>\n","      <td>0.038922</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.033622</td>\n","      <td>0.038922</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.033622</td>\n","      <td>0.038922</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.297427</td>\n","      <td>0.344313</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.033622</td>\n","      <td>0.038922</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.033622</td>\n","      <td>0.038922</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.033622</td>\n","      <td>0.038922</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.297427</td>\n","      <td>0.344313</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.033622</td>\n","      <td>0.038922</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d65a4f56-a142-4a54-b4ce-9cc97de08171')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d65a4f56-a142-4a54-b4ce-9cc97de08171 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d65a4f56-a142-4a54-b4ce-9cc97de08171');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5157cc3a-1223-49a5-a908-8d833eb1f3fa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5157cc3a-1223-49a5-a908-8d833eb1f3fa')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5157cc3a-1223-49a5-a908-8d833eb1f3fa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["second_df['nomalized_weights'].sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G5iHTGSE9xNs","executionInfo":{"status":"ok","timestamp":1692820521819,"user_tz":-300,"elapsed":5,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"8705cf34-988b-44ed-9168-db0de06b471d"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9999999999999999"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["second_df['cumsum_upper'] = np.cumsum(second_df['nomalized_weights'])\n","second_df['cumsum_lower'] = second_df['cumsum_upper'] - second_df['nomalized_weights']\n","second_df[['X1','X2','label','weights','y_pred','nomalized_weights','cumsum_lower','cumsum_upper']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"AmT2vDjp90Zx","executionInfo":{"status":"ok","timestamp":1692820536594,"user_tz":-300,"elapsed":384,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"98067eea-7a89-41e1-8e21-ebebf41429e5"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   X1  X2  label  weights  y_pred  nomalized_weights  cumsum_lower  \\\n","5   6   9      1      0.1       1           0.038922      0.000000   \n","8   9   9      0      0.1       0           0.038922      0.038922   \n","1   2   3      1      0.1       1           0.038922      0.077843   \n","8   9   9      0      0.1       0           0.038922      0.116765   \n","2   3   6      0      0.1       1           0.344313      0.155687   \n","1   2   3      1      0.1       1           0.038922      0.500000   \n","0   1   5      1      0.1       1           0.038922      0.538922   \n","3   4   8      1      0.1       1           0.038922      0.577843   \n","2   3   6      0      0.1       1           0.344313      0.616765   \n","3   4   8      1      0.1       1           0.038922      0.961078   \n","\n","   cumsum_upper  \n","5      0.038922  \n","8      0.077843  \n","1      0.116765  \n","8      0.155687  \n","2      0.500000  \n","1      0.538922  \n","0      0.577843  \n","3      0.616765  \n","2      0.961078  \n","3      1.000000  "],"text/html":["\n","  <div id=\"df-a872a2aa-1d71-4ea8-9b42-23b133a123c9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>label</th>\n","      <th>weights</th>\n","      <th>y_pred</th>\n","      <th>nomalized_weights</th>\n","      <th>cumsum_lower</th>\n","      <th>cumsum_upper</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.038922</td>\n","      <td>0.000000</td>\n","      <td>0.038922</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.038922</td>\n","      <td>0.038922</td>\n","      <td>0.077843</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.038922</td>\n","      <td>0.077843</td>\n","      <td>0.116765</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","      <td>0.038922</td>\n","      <td>0.116765</td>\n","      <td>0.155687</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.344313</td>\n","      <td>0.155687</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.038922</td>\n","      <td>0.500000</td>\n","      <td>0.538922</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.038922</td>\n","      <td>0.538922</td>\n","      <td>0.577843</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.038922</td>\n","      <td>0.577843</td>\n","      <td>0.616765</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.344313</td>\n","      <td>0.616765</td>\n","      <td>0.961078</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","      <td>0.038922</td>\n","      <td>0.961078</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a872a2aa-1d71-4ea8-9b42-23b133a123c9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a872a2aa-1d71-4ea8-9b42-23b133a123c9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a872a2aa-1d71-4ea8-9b42-23b133a123c9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b5627926-46ed-406a-99f5-cefefeafa749\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b5627926-46ed-406a-99f5-cefefeafa749')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b5627926-46ed-406a-99f5-cefefeafa749 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["index_values = create_new_dataset(second_df)\n","third_df = second_df.iloc[index_values,[0,1,2,3]]\n","third_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"kkmhZP4x94Vv","executionInfo":{"status":"ok","timestamp":1692820566882,"user_tz":-300,"elapsed":9,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"d03b08e0-76c5-478f-c331-4302e9880711"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   X1  X2  label  weights\n","1   2   3      1      0.1\n","2   3   6      0      0.1\n","1   2   3      1      0.1\n","1   2   3      1      0.1\n","1   2   3      1      0.1\n","1   2   3      1      0.1\n","1   2   3      1      0.1\n","1   2   3      1      0.1\n","1   2   3      1      0.1\n","1   2   3      1      0.1"],"text/html":["\n","  <div id=\"df-a36e3991-7c58-42cb-b44c-59782a3a0045\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>label</th>\n","      <th>weights</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a36e3991-7c58-42cb-b44c-59782a3a0045')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a36e3991-7c58-42cb-b44c-59782a3a0045 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a36e3991-7c58-42cb-b44c-59782a3a0045');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-545a6ad9-c51b-4873-a8bb-4bd94cf98bc5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-545a6ad9-c51b-4873-a8bb-4bd94cf98bc5')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-545a6ad9-c51b-4873-a8bb-4bd94cf98bc5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","source":["\n","\n","---\n","\n","\n","\n","---\n","\n","---\n","\n","\n","\n"],"metadata":{"id":"gYST7Me2-CG2"}},{"cell_type":"code","source":["dt3 = DecisionTreeClassifier(max_depth=1)\n","\n","X = second_df.iloc[:,0:2].values\n","y = second_df.iloc[:,2].values\n","\n","dt3.fit(X,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"ajmY-BRl9_lu","executionInfo":{"status":"ok","timestamp":1692820596661,"user_tz":-300,"elapsed":409,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"01deb9a6-7d7d-462e-d5fc-78cd6852c02e"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier(max_depth=1)"],"text/html":["<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(max_depth=1)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["plot_decision_regions(X, y, clf=dt3, legend=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"9bnZMCd_-G4Y","executionInfo":{"status":"ok","timestamp":1692820614436,"user_tz":-300,"elapsed":1220,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"8ed16cd1-e751-4d49-d2b6-e717d4d76321"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":42},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["third_df['y_pred'] = dt3.predict(X)\n","third_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"yhQ-yJWC-Pca","executionInfo":{"status":"ok","timestamp":1692820647266,"user_tz":-300,"elapsed":471,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"fbb1700e-efeb-485d-8129-ae90c9f041e5"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   X1  X2  label  weights  y_pred\n","1   2   3      1      0.1       1\n","2   3   6      0      0.1       0\n","1   2   3      1      0.1       1\n","1   2   3      1      0.1       0\n","1   2   3      1      0.1       1\n","1   2   3      1      0.1       1\n","1   2   3      1      0.1       1\n","1   2   3      1      0.1       1\n","1   2   3      1      0.1       1\n","1   2   3      1      0.1       1"],"text/html":["\n","  <div id=\"df-179feee6-de33-4040-979d-0a28eee9ad70\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>label</th>\n","      <th>weights</th>\n","      <th>y_pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-179feee6-de33-4040-979d-0a28eee9ad70')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-179feee6-de33-4040-979d-0a28eee9ad70 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-179feee6-de33-4040-979d-0a28eee9ad70');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c2670596-03f1-48cd-833b-e6639135dd80\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c2670596-03f1-48cd-833b-e6639135dd80')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c2670596-03f1-48cd-833b-e6639135dd80 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["alpha3 = calculate_model_weight(0.7)\n","alpha3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"obbc3yax-TND","executionInfo":{"status":"ok","timestamp":1692820663275,"user_tz":-300,"elapsed":5,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"f85bac3c-8524-4504-ef49-8c7f76942ad2"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-0.4236489301936017"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["print(alpha1,alpha2,alpha3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CFoUYUA3-fhI","executionInfo":{"status":"ok","timestamp":1692820702571,"user_tz":-300,"elapsed":369,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"1e086437-9d86-4261-ec19-22c82de2e902"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["0.42364893019360184 1.0986122886681098 -0.4236489301936017\n"]}]},{"cell_type":"markdown","source":["#Prediction"],"metadata":{"id":"x6TwYngj-ba-"}},{"cell_type":"code","source":["query = np.array([1,5]).reshape(1,2)\n","dt1.predict(query)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OC7EGzDL-jkS","executionInfo":{"status":"ok","timestamp":1692821204835,"user_tz":-300,"elapsed":5,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"595b071d-18c2-4984-e55f-4d5b0b638b65"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1])"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["dt2.predict(query)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FROyUJupAbLQ","executionInfo":{"status":"ok","timestamp":1692821214350,"user_tz":-300,"elapsed":8,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"d2e9941c-c38d-4a93-afb1-bd112edc2d79"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1])"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["dt3.predict(query)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LDkGZRVKAdeI","executionInfo":{"status":"ok","timestamp":1692821224856,"user_tz":-300,"elapsed":5,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"47bbd09a-f0e4-4e85-f114-663d36767e7b"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1])"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["alpha1*1 + alpha2*(1) + alpha3*(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZhpLVZj6AgSt","executionInfo":{"status":"ok","timestamp":1692821239503,"user_tz":-300,"elapsed":404,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"2e9cba87-d507-400d-f4f3-7ac2297e8851"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.09861228866811"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["np.sign(1.09)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d9XigxhTAjtq","executionInfo":{"status":"ok","timestamp":1692821248510,"user_tz":-300,"elapsed":5,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"1e0fa950-9032-430f-831e-f5018cdf270e"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":50}]},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"L9gwaPSYAm8Q"}},{"cell_type":"code","source":["query = np.array([9,9]).reshape(1,2)\n","dt1.predict(query)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SMFs-NqNAnlz","executionInfo":{"status":"ok","timestamp":1692821266120,"user_tz":-300,"elapsed":389,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"ab357789-71ff-4ed8-ed0c-e31a7b1e38f8"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0])"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["dt2.predict(query)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YLmwoSuzAr-s","executionInfo":{"status":"ok","timestamp":1692821277174,"user_tz":-300,"elapsed":5,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"f0e13668-da55-48ec-bedb-fbf30999fd34"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0])"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["dt3.predict(query)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t0nIdkJoAs0Y","executionInfo":{"status":"ok","timestamp":1692821285868,"user_tz":-300,"elapsed":378,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"dbc99824-0256-4754-b7d0-c278058711f4"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0])"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["alpha1*(1) + alpha2*(-1) + alpha3*(-1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YCojPBSyAvAj","executionInfo":{"status":"ok","timestamp":1692821294973,"user_tz":-300,"elapsed":384,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"634cd900-8a53-4ce2-ee91-1971cc25c115"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-0.2513144282809062"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["np.sign(-0.25)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cM2alWdKAycA","executionInfo":{"status":"ok","timestamp":1692821309464,"user_tz":-300,"elapsed":373,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"519d484a-d752-49aa-ac0f-49df7398033e"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-1.0"]},"metadata":{},"execution_count":55}]}]}