{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOK5s3CRhbnqifeGZGiTNZR"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"TPU"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"mQOg7ycvjZcm","executionInfo":{"status":"ok","timestamp":1693434433245,"user_tz":-300,"elapsed":1265,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"outputs":[],"source":["from sklearn.datasets import load_diabetes\n","from sklearn.metrics import r2_score\n","import numpy as np\n","X,y = load_diabetes(return_X_y=True)"]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=4)\n","from sklearn.linear_model import SGDRegressor\n","reg = SGDRegressor(penalty='l2',max_iter=500,eta0=0.1,learning_rate='constant',alpha=0.001)\n","reg.fit(X_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"UJ2sY1cbjrLO","executionInfo":{"status":"ok","timestamp":1693434451912,"user_tz":-300,"elapsed":417,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"e4fec865-a7a7-4558-dc66-7b326bcf7cda"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SGDRegressor(alpha=0.001, eta0=0.1, learning_rate='constant', max_iter=500)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SGDRegressor(alpha=0.001, eta0=0.1, learning_rate=&#x27;constant&#x27;, max_iter=500)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SGDRegressor</label><div class=\"sk-toggleable__content\"><pre>SGDRegressor(alpha=0.001, eta0=0.1, learning_rate=&#x27;constant&#x27;, max_iter=500)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["y_pred = reg.predict(X_test)\n","print(\"R2 score\",r2_score(y_test,y_pred))\n","print(reg.coef_)\n","print(reg.intercept_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JYKIbSP1jx5O","executionInfo":{"status":"ok","timestamp":1693434465839,"user_tz":-300,"elapsed":409,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"b565e575-f81a-4a00-bada-39d9c041e88d"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["R2 score 0.4420974967392436\n","[  49.5009585  -143.18912001  356.16981162  260.5782225    -0.42961318\n","  -48.56499798 -170.09014771  140.21428927  315.68981461  103.41656578]\n","[147.19796055]\n"]}]},{"cell_type":"markdown","source":["\n","\n","---\n","\n","\n","\n","---\n","\n","\n","\n","---\n","\n","\n","\n","---\n","\n"],"metadata":{"id":"Qb6al4wCj1S7"}},{"cell_type":"code","source":["from sklearn.linear_model import Ridge\n","reg = Ridge(alpha=0.001, max_iter=500,solver='sparse_cg')\n","reg.fit(X_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"3j2CnSaYj340","executionInfo":{"status":"ok","timestamp":1693434495101,"user_tz":-300,"elapsed":404,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"d05b5fe4-8808-4adf-83c7-080512471dad"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ridge(alpha=0.001, max_iter=500, solver='sparse_cg')"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Ridge(alpha=0.001, max_iter=500, solver=&#x27;sparse_cg&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Ridge</label><div class=\"sk-toggleable__content\"><pre>Ridge(alpha=0.001, max_iter=500, solver=&#x27;sparse_cg&#x27;)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["y_pred = reg.predict(X_test)\n","print(\"R2 score\",r2_score(y_test,y_pred))\n","print(reg.coef_)\n","print(reg.intercept_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bb2Wl-yKj8d8","executionInfo":{"status":"ok","timestamp":1693434510642,"user_tz":-300,"elapsed":380,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"680ad006-8190-44f8-eb6e-ae319ba20632"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["R2 score 0.46250101619914563\n","[  34.52192544 -290.84084076  482.40181344  368.0678662  -852.44873179\n","  501.59160336  180.11115788  270.76333979  759.73534372   37.4913546 ]\n","151.10198517439466\n"]}]},{"cell_type":"markdown","source":["\n","\n","---\n","\n","\n","\n","---\n","\n","\n","\n","---\n","\n","\n","\n","---\n","\n"],"metadata":{"id":"XIN9ffCwkBYy"}},{"cell_type":"code","source":["class MeraRidgeGD:\n","\n","    def __init__(self,epochs,learning_rate,alpha):\n","\n","        self.learning_rate = learning_rate\n","        self.epochs = epochs\n","        self.alpha = alpha\n","        self.coef_ = None\n","        self.intercept_ = None\n","\n","    def fit(self,X_train,y_train):\n","\n","        self.coef_ = np.ones(X_train.shape[1])\n","        self.intercept_ = 0\n","        thetha = np.insert(self.coef_,0,self.intercept_)\n","\n","        X_train = np.insert(X_train,0,1,axis=1)\n","\n","        for i in range(self.epochs):\n","            thetha_der = np.dot(X_train.T,X_train).dot(thetha) - np.dot(X_train.T,y_train) + self.alpha*thetha\n","            thetha = thetha - self.learning_rate*thetha_der\n","\n","        self.coef_ = thetha[1:]\n","        self.intercept_ = thetha[0]\n","\n","    def predict(self,X_test):\n","\n","        return np.dot(X_test,self.coef_) + self.intercept_"],"metadata":{"id":"0ZpmL18LkDNV","executionInfo":{"status":"ok","timestamp":1693434552039,"user_tz":-300,"elapsed":499,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["reg = MeraRidgeGD(epochs=500,alpha=0.001,learning_rate=0.005)\n","reg.fit(X_train,y_train)"],"metadata":{"id":"rKxqHxehkKni","executionInfo":{"status":"ok","timestamp":1693434639406,"user_tz":-300,"elapsed":382,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["y_pred = reg.predict(X_test)\n","print(\"R2 score\",r2_score(y_test,y_pred))\n","print(reg.coef_)\n","print(reg.intercept_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8nS4zJWzkbYt","executionInfo":{"status":"ok","timestamp":1693434651153,"user_tz":-300,"elapsed":367,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"4d29c49e-f6d8-483a-bdb0-8f62a226d65e"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["R2 score 0.4738018280260913\n","[  46.65050914 -221.3750037   452.12080647  325.54248128  -29.09464178\n","  -96.47517735 -190.90017011  146.32900372  400.80267299   95.09048094]\n","150.86975316713472\n"]}]}]}