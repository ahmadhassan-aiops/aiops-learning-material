{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP/rdtAb5oGgV05Gjf7Xl0w"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"TPU"},"cells":[{"cell_type":"code","execution_count":20,"metadata":{"id":"EmXOVVfMRjL6","executionInfo":{"status":"ok","timestamp":1692658992636,"user_tz":-300,"elapsed":1042,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\n","from sklearn.svm import SVC\n","from sklearn.linear_model import LogisticRegression\n","\n","from sklearn.metrics import accuracy_score"]},{"cell_type":"code","source":["df = pd.read_csv('/content/raw.githubusercontent.com_campusx-official_100-days-of-machine-learning_main_day65-random-forest_heart.csv')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"6jTROtMNTJiY","executionInfo":{"status":"ok","timestamp":1692658994119,"user_tz":-300,"elapsed":53,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"1189d453-97fa-45a3-c612-ea80c8dbc3b7"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age  sex  cp  trestbps  chol  fbs  restecg  thalach  exang  oldpeak  slope  \\\n","0   63    1   3       145   233    1        0      150      0      2.3      0   \n","1   37    1   2       130   250    0        1      187      0      3.5      0   \n","2   41    0   1       130   204    0        0      172      0      1.4      2   \n","3   56    1   1       120   236    0        1      178      0      0.8      2   \n","4   57    0   0       120   354    0        1      163      1      0.6      2   \n","\n","   ca  thal  target  \n","0   0     1       1  \n","1   0     2       1  \n","2   0     2       1  \n","3   0     2       1  \n","4   0     2       1  "],"text/html":["\n","  <div id=\"df-9fecf107-6da2-4bdb-a229-3ca5576f8818\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>cp</th>\n","      <th>trestbps</th>\n","      <th>chol</th>\n","      <th>fbs</th>\n","      <th>restecg</th>\n","      <th>thalach</th>\n","      <th>exang</th>\n","      <th>oldpeak</th>\n","      <th>slope</th>\n","      <th>ca</th>\n","      <th>thal</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>63</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>145</td>\n","      <td>233</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>150</td>\n","      <td>0</td>\n","      <td>2.3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>130</td>\n","      <td>250</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>187</td>\n","      <td>0</td>\n","      <td>3.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>41</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>130</td>\n","      <td>204</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>172</td>\n","      <td>0</td>\n","      <td>1.4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>56</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>120</td>\n","      <td>236</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>178</td>\n","      <td>0</td>\n","      <td>0.8</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>57</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>120</td>\n","      <td>354</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>163</td>\n","      <td>1</td>\n","      <td>0.6</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9fecf107-6da2-4bdb-a229-3ca5576f8818')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9fecf107-6da2-4bdb-a229-3ca5576f8818 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9fecf107-6da2-4bdb-a229-3ca5576f8818');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0abc5ec3-c859-47c8-982e-28c26d0730ae\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0abc5ec3-c859-47c8-982e-28c26d0730ae')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0abc5ec3-c859-47c8-982e-28c26d0730ae button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SLDmYsEQTWBs","executionInfo":{"status":"ok","timestamp":1692658994121,"user_tz":-300,"elapsed":51,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"7cbdd550-e2ef-4d81-9b64-b90b2e46705e"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(303, 14)"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["X = df.iloc[:,0:-1]\n","y = df.iloc[:,-1]"],"metadata":{"id":"P02Byk9rTZPV","executionInfo":{"status":"ok","timestamp":1692658994125,"user_tz":-300,"elapsed":50,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)"],"metadata":{"id":"LUpuRq0wTeWC","executionInfo":{"status":"ok","timestamp":1692658994194,"user_tz":-300,"elapsed":119,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["rf = RandomForestClassifier()\n","gb = GradientBoostingClassifier()\n","svc = SVC()\n","lr = LogisticRegression()"],"metadata":{"id":"OJ6BPjFXTgqX","executionInfo":{"status":"ok","timestamp":1692658994194,"user_tz":-300,"elapsed":118,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["rf.fit(X_train,y_train)\n","y_pred = rf.predict(X_test)\n","accuracy_score(y_test,y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XSRRajYFT0Ro","executionInfo":{"status":"ok","timestamp":1692658994195,"user_tz":-300,"elapsed":119,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"4f5bc6ae-61aa-420e-edae-2514a9fc8e51"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8688524590163934"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["gb.fit(X_train,y_train)\n","y_pred = gb.predict(X_test)\n","accuracy_score(y_test,y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UJJzj0tZT1GG","executionInfo":{"status":"ok","timestamp":1692658994195,"user_tz":-300,"elapsed":116,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"799ea86e-37b8-4c97-e1ca-4730cbb64f00"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7704918032786885"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["svc.fit(X_train,y_train)\n","y_pred = svc.predict(X_test)\n","accuracy_score(y_test,y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d4GXm2i7T6R7","executionInfo":{"status":"ok","timestamp":1692658994203,"user_tz":-300,"elapsed":119,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"edc165cc-aa9d-4905-c88f-ed1be09ad4c2"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7049180327868853"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["lr.fit(X_train,y_train)\n","y_pred = lr.predict(X_test)\n","accuracy_score(y_test,y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KvQX5rKCT70u","executionInfo":{"status":"ok","timestamp":1692658994736,"user_tz":-300,"elapsed":650,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"120df80c-d0d8-4ddd-e193-c7036993d66c"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"execute_result","data":{"text/plain":["0.8852459016393442"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["rf = RandomForestClassifier(max_samples=0.75,random_state=42)\n","rf.fit(X_train,y_train)\n","y_pred = rf.predict(X_test)\n","accuracy_score(y_test,y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YWQTNcJLUBzF","executionInfo":{"status":"ok","timestamp":1692658994736,"user_tz":-300,"elapsed":646,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"e7a1ffd8-9db7-401d-bc53-13043b66931c"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9016393442622951"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["from sklearn.model_selection import cross_val_score\n","np.mean(cross_val_score(RandomForestClassifier(max_samples=0.75),X,y,cv=10,scoring='accuracy'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6q-wSRrxUKEw","executionInfo":{"status":"ok","timestamp":1692658998221,"user_tz":-300,"elapsed":3493,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"30e8390e-b005-4675-aef8-05fb0bf15a23"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8249462365591398"]},"metadata":{},"execution_count":31}]},{"cell_type":"markdown","source":["#GridSearchCV"],"metadata":{"id":"jH1iZKRHUP1Z"}},{"cell_type":"code","source":["# Number of trees in random forest\n","n_estimators = [20,60,100,120]\n","\n","# Number of features to consider at every split\n","max_features = [0.2,0.6,1.0]\n","\n","# Maximum number of levels in tree\n","max_depth = [2,8,None]\n","\n","# Number of samples\n","max_samples = [0.5,0.75,1.0]\n","\n","# 108 diff random forest train"],"metadata":{"id":"-R2zbaxkUSUa","executionInfo":{"status":"ok","timestamp":1692658998223,"user_tz":-300,"elapsed":43,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["param_grid = {'n_estimators': n_estimators,\n","               'max_features': max_features,\n","               'max_depth': max_depth,\n","              'max_samples':max_samples\n","             }\n","print(param_grid)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DjvL86PqUcE_","executionInfo":{"status":"ok","timestamp":1692658998225,"user_tz":-300,"elapsed":27,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"3379cc3a-9d3b-4f58-e0c3-c0c58e84415c"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["{'n_estimators': [20, 60, 100, 120], 'max_features': [0.2, 0.6, 1.0], 'max_depth': [2, 8, None], 'max_samples': [0.5, 0.75, 1.0]}\n"]}]},{"cell_type":"code","source":["rf = RandomForestClassifier()\n","from sklearn.model_selection import GridSearchCV\n","rf_grid = GridSearchCV(estimator = rf,\n","                       param_grid = param_grid,\n","                       cv = 5,\n","                       verbose=2,\n","                       n_jobs = -1)"],"metadata":{"id":"fCnpPlOPUfP2","executionInfo":{"status":"ok","timestamp":1692658998226,"user_tz":-300,"elapsed":22,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["rf_grid.fit(X_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":135},"id":"HGGxlAgBUm-P","executionInfo":{"status":"ok","timestamp":1692659066424,"user_tz":-300,"elapsed":68216,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"99b12cc4-3056-438d-ff8f-8883dfde5c53"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 5 folds for each of 108 candidates, totalling 540 fits\n"]},{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=5, estimator=RandomForestClassifier(), n_jobs=-1,\n","             param_grid={'max_depth': [2, 8, None],\n","                         'max_features': [0.2, 0.6, 1.0],\n","                         'max_samples': [0.5, 0.75, 1.0],\n","                         'n_estimators': [20, 60, 100, 120]},\n","             verbose=2)"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=RandomForestClassifier(), n_jobs=-1,\n","             param_grid={&#x27;max_depth&#x27;: [2, 8, None],\n","                         &#x27;max_features&#x27;: [0.2, 0.6, 1.0],\n","                         &#x27;max_samples&#x27;: [0.5, 0.75, 1.0],\n","                         &#x27;n_estimators&#x27;: [20, 60, 100, 120]},\n","             verbose=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5, estimator=RandomForestClassifier(), n_jobs=-1,\n","             param_grid={&#x27;max_depth&#x27;: [2, 8, None],\n","                         &#x27;max_features&#x27;: [0.2, 0.6, 1.0],\n","                         &#x27;max_samples&#x27;: [0.5, 0.75, 1.0],\n","                         &#x27;n_estimators&#x27;: [20, 60, 100, 120]},\n","             verbose=2)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["rf_grid.best_params_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bZNpesXxUrW5","executionInfo":{"status":"ok","timestamp":1692659066427,"user_tz":-300,"elapsed":39,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"9412e5f7-6c18-46a3-a616-7c7523aa0d51"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'max_depth': None,\n"," 'max_features': 0.2,\n"," 'max_samples': 0.5,\n"," 'n_estimators': 60}"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["rf_grid.best_score_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yMq98SALUvWa","executionInfo":{"status":"ok","timestamp":1692659066432,"user_tz":-300,"elapsed":31,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"9a72b94b-6896-48ae-8676-3d98c095e3b5"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8389455782312926"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":["#RandomSearchCV"],"metadata":{"id":"Gid_WsUzUxe0"}},{"cell_type":"code","source":["# Number of trees in random forest\n","n_estimators = [20,60,100,120]\n","\n","# Number of features to consider at every split\n","max_features = [0.2,0.6,1.0]\n","\n","# Maximum number of levels in tree\n","max_depth = [2,8,None]\n","\n","# Number of samples\n","max_samples = [0.5,0.75,1.0]\n","\n","# Bootstrap samples\n","bootstrap = [True,False]\n","\n","# Minimum number of samples required to split a node\n","min_samples_split = [2, 5]\n","\n","# Minimum number of samples required at each leaf node\n","min_samples_leaf = [1, 2]"],"metadata":{"id":"g3SOrpejUz_g","executionInfo":{"status":"ok","timestamp":1692659066433,"user_tz":-300,"elapsed":29,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["param_grid = {'n_estimators': n_estimators,\n","               'max_features': max_features,\n","               'max_depth': max_depth,\n","              'max_samples':max_samples,\n","              'bootstrap':bootstrap,\n","              'min_samples_split':min_samples_split,\n","              'min_samples_leaf':min_samples_leaf\n","             }\n","print(param_grid)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dTNwjqu1U8xf","executionInfo":{"status":"ok","timestamp":1692659066434,"user_tz":-300,"elapsed":29,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"e2dd61f6-3aa0-4638-8e6e-b2c46942d32e"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["{'n_estimators': [20, 60, 100, 120], 'max_features': [0.2, 0.6, 1.0], 'max_depth': [2, 8, None], 'max_samples': [0.5, 0.75, 1.0], 'bootstrap': [True, False], 'min_samples_split': [2, 5], 'min_samples_leaf': [1, 2]}\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import RandomizedSearchCV\n","\n","rf_grid = RandomizedSearchCV(estimator = rf,\n","                       param_distributions = param_grid,\n","                       cv = 5,\n","                       verbose=2,\n","                       n_jobs = -1)"],"metadata":{"id":"XP1w6w4qVB16","executionInfo":{"status":"ok","timestamp":1692659066434,"user_tz":-300,"elapsed":26,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["rf_grid.fit(X_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":485},"id":"dIXT25jGVHPt","executionInfo":{"status":"ok","timestamp":1692659069769,"user_tz":-300,"elapsed":3363,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"c3dbf7aa-6db2-4a9a-f3c1-3825cd915676"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 5 folds for each of 10 candidates, totalling 50 fits\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: \n","20 fits failed out of a total of 50.\n","The score on these train-test partitions for these parameters will be set to nan.\n","If these failures are not expected, you can try to debug them by setting error_score='raise'.\n","\n","Below are more details about the failures:\n","--------------------------------------------------------------------------------\n","20 fits failed with the following error:\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n","    estimator.fit(X_train, y_train, **fit_params)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_forest.py\", line 397, in fit\n","    raise ValueError(\n","ValueError: `max_sample` cannot be set if `bootstrap=False`. Either switch to `bootstrap=True` or set `max_sample=None`.\n","\n","  warnings.warn(some_fits_failed_message, FitFailedWarning)\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_search.py:952: UserWarning: One or more of the test scores are non-finite: [0.78069728 0.79744898        nan 0.79761905 0.80178571 0.80986395\n","        nan        nan 0.81411565        nan]\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["RandomizedSearchCV(cv=5, estimator=RandomForestClassifier(), n_jobs=-1,\n","                   param_distributions={'bootstrap': [True, False],\n","                                        'max_depth': [2, 8, None],\n","                                        'max_features': [0.2, 0.6, 1.0],\n","                                        'max_samples': [0.5, 0.75, 1.0],\n","                                        'min_samples_leaf': [1, 2],\n","                                        'min_samples_split': [2, 5],\n","                                        'n_estimators': [20, 60, 100, 120]},\n","                   verbose=2)"],"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomizedSearchCV(cv=5, estimator=RandomForestClassifier(), n_jobs=-1,\n","                   param_distributions={&#x27;bootstrap&#x27;: [True, False],\n","                                        &#x27;max_depth&#x27;: [2, 8, None],\n","                                        &#x27;max_features&#x27;: [0.2, 0.6, 1.0],\n","                                        &#x27;max_samples&#x27;: [0.5, 0.75, 1.0],\n","                                        &#x27;min_samples_leaf&#x27;: [1, 2],\n","                                        &#x27;min_samples_split&#x27;: [2, 5],\n","                                        &#x27;n_estimators&#x27;: [20, 60, 100, 120]},\n","                   verbose=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomizedSearchCV</label><div class=\"sk-toggleable__content\"><pre>RandomizedSearchCV(cv=5, estimator=RandomForestClassifier(), n_jobs=-1,\n","                   param_distributions={&#x27;bootstrap&#x27;: [True, False],\n","                                        &#x27;max_depth&#x27;: [2, 8, None],\n","                                        &#x27;max_features&#x27;: [0.2, 0.6, 1.0],\n","                                        &#x27;max_samples&#x27;: [0.5, 0.75, 1.0],\n","                                        &#x27;min_samples_leaf&#x27;: [1, 2],\n","                                        &#x27;min_samples_split&#x27;: [2, 5],\n","                                        &#x27;n_estimators&#x27;: [20, 60, 100, 120]},\n","                   verbose=2)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" ><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["rf_grid.best_params_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JUaY5jJ0VLHM","executionInfo":{"status":"ok","timestamp":1692659069832,"user_tz":-300,"elapsed":169,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"99c6cd93-45fd-41d1-edde-39043f483527"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'n_estimators': 20,\n"," 'min_samples_split': 5,\n"," 'min_samples_leaf': 2,\n"," 'max_samples': 0.5,\n"," 'max_features': 0.6,\n"," 'max_depth': 2,\n"," 'bootstrap': True}"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["rf_grid.best_score_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"byCnp3oQVPBV","executionInfo":{"status":"ok","timestamp":1692659069836,"user_tz":-300,"elapsed":165,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"02841cc2-ff61-4b5d-b5a8-517c629571c4"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8141156462585034"]},"metadata":{},"execution_count":43}]}]}